#!/bin/sh
# ============================================================================================
# This unix script runs ns2 scenarios to generate trace files.
# It now accommodates the updated connection and movement files, which produce three
# files per topology size.
#
# For each protocol (DSDV, DSR, AODV) and connection type (CBR),
# it will process the following scenarios:
#   1) 25 nodes, 15 connections
#   2) 100 nodes, 100 connections
#   3) 200 nodes, 200 connections
#
# For each scenario, three movement iterations (I1, I2, I3) and three connection 
# iterations (E1, E2, E3) are processed.
# ============================================================================================

FOLDER='.'
mkdir -p ./TRACE

START=$(date +%s)
COUNT=0
X=500
Y=500
T=600.1

# Loop over protocols
for R in DSDV DSR AODV; do
  # Loop over connection types (only CBR in this example)
  for TYPE in CBR; do
    # Loop over topology scenarios: "nodes:connections"
    for scenario in "25:15" "100:100" "200:200"; do
      N=$(echo $scenario | cut -d: -f1)
      C=$(echo $scenario | cut -d: -f2)
      S=5
      P=10
      
      # For each scenario, loop over movement iterations (I) and connection iterations (E)
      F=1
      for I in 1 2 3; do
        for E in 1 2 3; do
          date | awk '{ print "Date: "$1" " $3 "-"$2"-"$6 }'
          date | awk '{ print "Time: "$4" " $5 }'
          echo " "
          echo "Running trace for Protocol: $R, Type: $TYPE, N: $N, C: $C, S: $S, P: $P, Movement Iteration: I${I}, Connection Iteration: E${E} ... Please wait!"
          
          ns trace.tcl $R $TYPE $N $C $S $P $X $Y $T \
            $FOLDER/CONN_SCEN/${TYPE}-N${N}-C${C}-E${E} \
            $FOLDER/MOV_SCEN/MOV-N${N}-S${S}-P${P}-I${I} \
            $FOLDER/TRACE/${R}-N${N}-C${C}-S${S}-P${P}-F${F}-${TYPE}.tr
          
          echo "The File ${R}-N${N}-C${C}-S${S}-P${P}-F${F}-${TYPE}.tr .... Done!!"
          COUNT=`expr $COUNT + 1`
          F=`expr $F + 1`
          
          END=$(date +%s)
          DIFF=$(( END - START ))
          HOURS=$(( DIFF / 3600 ))
          MINUTES=$(( (DIFF / 60) % 60 ))
          echo "Now ${COUNT} Files Done in ${HOURS} H:${MINUTES} M"
          echo "======================================================================="
          echo ""
        done
      done
    done
  done
done

exit 0
